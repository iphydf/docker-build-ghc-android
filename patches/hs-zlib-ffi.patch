diff -ru a/Codec/Compression/Zlib/Stream.hsc b/Codec/Compression/Zlib/Stream.hsc
--- a/Codec/Compression/Zlib/Stream.hsc	2015-05-16 15:12:10.000000000 +0200
+++ b/Codec/Compression/Zlib/Stream.hsc	2016-07-04 22:25:40.933314724 +0200
@@ -2,6 +2,9 @@
 #if __GLASGOW_HASKELL__ >= 702
 {-# LANGUAGE DeriveGeneric #-}
 #endif
+#if __GLASGOW_HASKELL__ >= 706
+{-# LANGUAGE CApiFFI #-}
+#endif
 -----------------------------------------------------------------------------
 -- |
 -- Copyright   :  (c) 2006-2015 Duncan Coutts
@@ -1007,7 +1010,19 @@
 --
 -- So we define c_inflateInit2 and c_deflateInit2 here as wrappers around
 -- their _ counterparts and pass the extra args.
-
+--
+-- As of GHC 7.6, we can import macros directly using the CApiFFI extension.
+-- This avoids the need for the hsc2hs #{const_str} construct, which means
+-- hsc2hs can run in cross-compilation mode.
+
+#if __GLASGOW_HASKELL__ >= 706
+foreign import capi unsafe "zlib.h inflateInit2"
+  c_inflateInit2 :: StreamState -> CInt -> IO CInt
+
+foreign import capi unsafe "zlib.h deflateInit2"
+  c_deflateInit2 :: StreamState
+                 -> CInt -> CInt -> CInt -> CInt -> CInt -> IO CInt
+#else
 foreign import ccall unsafe "zlib.h inflateInit2_"
   c_inflateInit2_ :: StreamState -> CInt -> Ptr CChar -> CInt -> IO CInt
 
@@ -1016,15 +1031,6 @@
   withCAString #{const_str ZLIB_VERSION} $ \versionStr ->
     c_inflateInit2_ z n versionStr (#{const sizeof(z_stream)} :: CInt)
 
-foreign import ccall unsafe "zlib.h inflate"
-  c_inflate :: StreamState -> CInt -> IO CInt
-
-foreign import ccall unsafe "zlib.h &inflateEnd"
-  c_inflateEnd :: FinalizerPtr StreamState
-
-foreign import ccall unsafe "zlib.h inflateReset"
-  c_inflateReset :: StreamState -> IO CInt
-
 foreign import ccall unsafe "zlib.h deflateInit2_"
   c_deflateInit2_ :: StreamState
                   -> CInt -> CInt -> CInt -> CInt -> CInt
@@ -1036,6 +1042,16 @@
 c_deflateInit2 z a b c d e =
   withCAString #{const_str ZLIB_VERSION} $ \versionStr ->
     c_deflateInit2_ z a b c d e versionStr (#{const sizeof(z_stream)} :: CInt)
+#endif
+
+foreign import ccall unsafe "zlib.h inflate"
+  c_inflate :: StreamState -> CInt -> IO CInt
+
+foreign import ccall unsafe "zlib.h &inflateEnd"
+  c_inflateEnd :: FinalizerPtr StreamState
+
+foreign import ccall unsafe "zlib.h inflateReset"
+  c_inflateReset :: StreamState -> IO CInt
 
 foreign import ccall unsafe "zlib.h deflateSetDictionary"
   c_deflateSetDictionary :: StreamState
